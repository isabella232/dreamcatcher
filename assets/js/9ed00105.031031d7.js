"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(r),f=i,m=d["".concat(u,".").concat(f)]||d[f]||p[f]||o;return r?n.createElement(m,a(a({ref:t},s),{},{components:r})):n.createElement(m,a({ref:t},s))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9733:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return s},default:function(){return d}});var n=r(3117),i=r(102),o=(r(7294),r(3905)),a=["components"],l={sidebar_position:3,title:"Configuration",slug:"configuration",id:"configuration"},u=void 0,c={unversionedId:"configuration",id:"configuration",title:"Configuration",description:"Environment Variables",source:"@site/docs/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/dreamcatcher/docs/configuration",editUrl:"https://github.com/persado/dreamcatcher/edit/master/docs/docs/configuration.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Configuration",slug:"configuration",id:"configuration"},sidebar:"globalSidebar",previous:{title:"Quick Start",permalink:"/dreamcatcher/docs/quick_start"},next:{title:"export",permalink:"/dreamcatcher/docs/api/export"}},s=[{value:"Environment Variables",id:"environment-variables",children:[],level:2}],p={toc:s};function d(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"environment-variables"},"Environment Variables"),(0,o.kt)("p",null,"The following optional environment variables are available for configuration:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"CONCURRENCY:")," (Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"20"),") The maximum number of puppeteer-cluster workers, or roughly concurrent requests. Requests over the limit will be added to a queue. Decrease this if you experience performance problems during peak load."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"PORT:")," (Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"8080"),") The port Dreamcatcher will listen to for requests."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"SENTRY_DSN:")," (Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"undefined"),") Dreamcatcher can integrate with Sentry for error reporting. To use Sentry, provide the DSN identifying your Sentry project and host."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"ALLOW_PRIVATE_NETWORKS:")," (Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"undefined"),") Dreamcatcher blocks any requests (e.g. images, CSS) to private networks / IPs by default. Pass this env var with value ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," in order to allow such requests. (This only applies to IPv4 IP addresses; hostnames that resolve to local addresses will still pass through)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"MONITOR")," (default: ",(0,o.kt)("inlineCode",{parentName:"li"},"undefined"),") If defined, logging to stdout is suppressed and instead you get the monitoring provided by ",(0,o.kt)("inlineCode",{parentName:"li"},"puppeteer-cluster"),". Try with ",(0,o.kt)("inlineCode",{parentName:"li"},"MONITOR=1 npm run start"),".")))}d.isMDXComponent=!0}}]);